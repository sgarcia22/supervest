/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Swap, SwapInterface } from "../../contracts/Swap";

const _abi = [
  {
    inputs: [],
    name: "poolFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddressIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddressOut",
        type: "address",
      },
    ],
    name: "swapExactInputSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040527fe592427a0aece92de3edee1f18e0157c0586156400000000000000000000000060805234801561003457600080fd5b5060805160601c6105c561005b6000398060b3528061013052806101c252506105c56000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063089fe6aa146100465780630c7a992e14610064578063c31c9c0714610084575b600080fd5b61004e610099565b60405161005b9190610576565b60405180910390f35b6100776100723660046104a6565b61009f565b60405161005b9190610586565b61008c6101c0565b60405161005b91906104f9565b610bb881565b60006100ad843330866101e4565b6100d8847f00000000000000000000000000000000000000000000000000000000000000008561033c565b60408051610100810182526001600160a01b0380871682528481166020830152610bb88284015233606083015242608083015260a08201869052600060c0830181905260e0830152915163414bf38960e01b815290917f0000000000000000000000000000000000000000000000000000000000000000169063414bf3899061016590849060040161050d565b602060405180830381600087803b15801561017f57600080fd5b505af1158015610193573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b791906104e1565b95945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b178152925182516000948594938a169392918291908083835b602083106102685780518252601f199092019160209182019101610249565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146102ca576040519150601f19603f3d011682016040523d82523d6000602084013e6102cf565b606091505b50915091508180156102fd5750805115806102fd57508080602001905160208110156102fa57600080fd5b50515b610334576040805162461bcd60e51b815260206004820152600360248201526229aa2360e91b604482015290519081900360640190fd5b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b1781529251825160009485949389169392918291908083835b602083106103b85780518252601f199092019160209182019101610399565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461041a576040519150601f19603f3d011682016040523d82523d6000602084013e61041f565b606091505b509150915081801561044d57508051158061044d575080806020019051602081101561044a57600080fd5b50515b610483576040805162461bcd60e51b8152602060048201526002602482015261534160f01b604482015290519081900360640190fd5b5050505050565b80356001600160a01b03811681146104a157600080fd5b919050565b6000806000606084860312156104ba578283fd5b6104c38461048a565b9250602084013591506104d86040850161048a565b90509250925092565b6000602082840312156104f2578081fd5b5051919050565b6001600160a01b0391909116815260200190565b81516001600160a01b03908116825260208084015182169083015260408084015162ffffff16908301526060808401518216908301526080808401519083015260a0838101519083015260c0808401519083015260e09283015116918101919091526101000190565b62ffffff91909116815260200190565b9081526020019056fea2646970667358221220a7c66c806b583076fdf07369bd57ae414f0f001bada99c6c1c75520bce1f7eca64736f6c63430007060033";

type SwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Swap__factory extends ContractFactory {
  constructor(...args: SwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Swap> {
    return super.deploy(overrides || {}) as Promise<Swap>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Swap {
    return super.attach(address) as Swap;
  }
  override connect(signer: Signer): Swap__factory {
    return super.connect(signer) as Swap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapInterface {
    return new utils.Interface(_abi) as SwapInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Swap {
    return new Contract(address, _abi, signerOrProvider) as Swap;
  }
}
